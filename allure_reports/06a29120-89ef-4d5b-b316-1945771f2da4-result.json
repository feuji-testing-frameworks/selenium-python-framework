{"name": "test_click_navBar_elements", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\shirisha.mannem\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\shirisha.mannem\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\shirisha.mannem\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)", "trace": "self = <test_mobile.TestMobileApp object at 0x0000016DB7CA3550>\nappium_driver_setup = <selenium.webdriver.remote.webdriver.WebDriver (session=\"c7cbbc2d-a2aa-4a8d-8e37-18b94cbc5505\")>\nmobile_data = {'ingredients': 'Milk, Coffee Powder, Sugar', 'instructions': 'Boil milk, add coffee powder and sugar, stir well and s...Feedback'], 'navigationbar': ['Get Ideas', 'My Recipes', 'Videos', 'Editorials', 'Activity', 'Grocery List', ...], ...}\n\n    @pytest.mark.run(order = 5)\n    def test_click_navBar_elements(self,appium_driver_setup,mobile_data) :\n        logging.getLogger(\"root\").info(\"Starting the test_click_navBar_elements\")\n        driver = appium_driver_setup\n        loginPage = LoginPage(driver);\n>       loginPage.login_function(mobile_data['username'],mobile_data['password']);\n\ntests\\mobile_testcases\\test_mobile.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\mobile_pages\\loginpage.py:18: in login_function\n    self.click_webelement(self.signin_button);\nactions\\mobile_actions.py:17: in click_webelement\n    self.webElement(locator).click();\nactions\\mobile_actions.py:12: in webElement\n    element = self.driver.find_element(* locator);\nenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000016DB7C86DD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ode_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\@appium\\\\\\\\base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.ts:75:12)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\shirisha.mannem\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\shirisha.mannem\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\shirisha.mannem\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\nenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "45d66dea-5315-4c88-adfd-6054262058f9-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5c426469-7d4d-4c10-99a5-59bb209dc5ab-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "055503fd-f40d-46a7-aebf-442141cea2f1-attachment.txt", "type": "text/plain"}], "start": 1716182694534, "stop": 1716182704702, "uuid": "61ee8512-9256-4d69-a3b5-2da68455c637", "historyId": "d8d7831e6dc89ae73b4a091704246f51", "testCaseId": "d8d7831e6dc89ae73b4a091704246f51", "fullName": "tests.mobile_testcases.test_mobile.TestMobileApp#test_click_navBar_elements", "labels": [{"name": "tag", "value": "run(order=5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure')"}, {"name": "parentSuite", "value": "tests.mobile_testcases"}, {"name": "suite", "value": "test_mobile"}, {"name": "subSuite", "value": "TestMobileApp"}, {"name": "host", "value": "FEUJI-V011D"}, {"name": "thread", "value": "828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.mobile_testcases.test_mobile"}]}